plugins {
    id 'java'
    id 'application'
}

group = 'bitxon.experiment'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClass = 'bitxon.experiment.Runner'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('com.azure:azure-sdk-bom:1.2.31')
    implementation 'com.azure:azure-cosmos'
    implementation 'ch.qos.logback:logback-classic:1.5.16'


    //We need this trick to run from InteliJ IDEA
    def osName = System.getProperty("os.name").toLowerCase()
    def arch = System.getProperty("os.arch").toLowerCase()
    if (osName.contains("win")) {
        implementation 'io.netty:netty-tcnative-boringssl-static:2.0.70.Final:windows-x86_64'
    } else if (osName.contains("mac")) {
        if (arch.contains("aarch64") || arch.contains("arm")) {
            implementation 'io.netty:netty-tcnative-boringssl-static:2.0.70.Final:osx-aarch_64'
        } else {
            implementation 'io.netty:netty-tcnative-boringssl-static:2.0.70.Final:osx-x86_64'
        }
    } else if (osName.contains("nux")) {
        implementation 'io.netty:netty-tcnative-boringssl-static:2.0.70.Final:linux-x86_64'
    }


    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    testImplementation platform('org.assertj:assertj-bom:3.27.3')
    testImplementation 'org.assertj:assertj-core'

    testImplementation platform('org.testcontainers:testcontainers-bom:1.20.4')
    testImplementation 'org.testcontainers:azure'
}

test {
    useJUnitPlatform()
}

tasks.register('testClassic', Test) {
    group 'verification'
    useJUnitPlatform {
        includeTags 'classic'
    }
}

tasks.register('testVNext', Test) {
    group 'verification'
    useJUnitPlatform {
        includeTags 'vnext'
    }
}